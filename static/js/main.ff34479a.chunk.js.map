{"version":3,"sources":["background.png","background-online.png","store.js","Form.js","Header.js","Footer.js","Login.js","Register.js","Welcome.js","FormTodo.js","TheList.js","Todo.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","token$","BehaviorSubject","localStorage","getItem","updateToken","token","setItem","removeItem","next","Form","props","onSubmit","bind","onChange","e","this","target","value","name","preventDefault","submitButton","input","inputDefault","css","width","height","paddingLeft","margin","borderTop","borderLeft","borderRight","borderBottom","backgroundColor","fontSize","color","error400","border","error401","submitDefault","fontWeight","textContent","cursor","type","className","placeholder","email","password","React","Component","Header","onClick","logout","buttonOne","buttonTwo","homeButton","pTextSpan","textDecoration","h3TextSpan","icon","borderRadius","padding","marginBottom","marginRight","position","top","console","log","testItem","to","user","activeToken","PureComponent","Footer","href","Login","state","errorMsg","subscription","subscribe","setState","unsubscribe","authData","axios","post","then","response","data","catch","err","message","details","textH3","fontFamily","lineHeight","marginTop","pText","errMsg","Helmet","Register","status","newInput","url","Welcome","decoded","jwt","decode","onGetData","CancelToken","source","get","headers","Authorization","cancelToken","todos","error","thrown","isCancel","cancel","ctaButton","grettings","dataLength","textInfo","pageTitle","link","iconRow","display","flexFlow","justifyContent","alignItems","iconRowSpan","background","zIndex","linkButton","verticalAlign","image","objectFit","undefined","length","style","src","backgroundOnline","alt","size","FormTodo","counter","marginLeft","textAlign","errorCounter","inputError","TheList","onDelete","radioBtnChange","id","index","printData","datas","right","push","map","button","buttonState","key","content","Todo","idStat","endSessionAlert","endSessionMsg","endSessionOption","userInput","copyData","newData","todo","delete","listIndex","findIndex","x","splice","buttonIndex","option","endSessionBox","backButton","paddingBottom","ReactDOM","createPortal","document","body","App","basename","exact","path","component","Home","Boolean","window","location","hostname","match","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ff34479a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.fa9bc396.png\";","module.exports = __webpack_public_path__ + \"static/media/background-online.46e70a0d.png\";","import {BehaviorSubject} from 'rxjs';\n\nexport const token$ = new BehaviorSubject(localStorage.getItem(\"token\"));\n\n// function to  save and remove token depend if the token is active or not. If active, then save the token to a local storage so that it's still available even if the page got refreshed\n//else if user want logout or the token validation time has expired, then remove the token from the local storage so the page will redirect automatically to a login page\n\nexport function updateToken(token) {\n  if (token) {\n    localStorage.setItem(\"token\", token);\n  } else {\n    localStorage.removeItem(\"token\");\n  }\n  token$.next(token);\n}","import React from 'react';\nimport { css } from \"glamor\";\n\n\nclass Form extends React.Component {\n\n    constructor(props){\n        super(props);\n\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onChange = this.onChange.bind(this);\n    }\n\n    onChange(e){\n      this.props.onChange(e.target.value, e.target.name)\n    }\n\n    onSubmit(e){\n        e.preventDefault();\n        this.props.onSubmit();\n    }\n\n    render(){\n\n        let submitButton;\n        let input;\n        let inputDefault = css({\n            width: \"50%\",\n            height: \"40px\",\n            paddingLeft: \"10px\",\n            margin: \"10px 0\",\n            borderTop: \"none\",\n            borderLeft: \"none\",\n            borderRight: \"none\",\n            borderBottom: \"4px solid #FFB200\",\n            backgroundColor: \"#F1F1F1\",\n            fontSize: \"14px\",\n            color: \"#737373\",\n        })\n\n        if(this.props.error400){\n          input = css({\n            border: \"2px solid red\",\n            \"::placeholder\": {\n              color: \"red\",\n              \n            },\n            \":focus::placeholder\":{\n              color: \"transparent\",\n            }\n          })\n      } else if (this.props.error401){\n        input = css({\n            border: \"2px solid red\",\n            \"::placeholder\": {\n              color: \"red\",\n             \n            },\n            \":focus::placeholder\":{\n              color: \"transparent\",\n            }\n          })\n      } else {\n        input = css({\n            \"::placeholder\": {\n                color: \"rgb(94, 94, 94)\"\n              },\n            \":focus::placeholder\":{\n              color: \"transparent\",\n            }\n        })\n      }\n\n      let submitDefault = css ({\n          color: 'white',\n          fontWeight: \"bold\",\n          fontSize: \"13px\",\n          width: \"51%\",\n          height: \"40px\", \n          margin: \"20px 0\",\n          border: \"none\",\n      })\n\n        if(this.props.textContent === \"Login\"){\n            submitButton =  css({\n              backgroundColor: \"#FFAA00\",\n              ':hover': {\n                backgroundColor: \"#FFC500\",\n                cursor: \"pointer\",\n                color: \"white\"\n              },\n            })\n        } else {\n            submitButton = css({\n              backgroundColor: \"#196ab1\",\n              ':hover': {\n                backgroundColor: \"#1c9bfa\",\n                cursor: \"pointer\",\n                color: \"white\"\n              },\n            })\n        }\n          \n\n        return ( <>\n                    <form onSubmit = {this.onSubmit}>\n                        <input type=\"email\" \n                            onChange={this.onChange} \n                            className={`${input} ${inputDefault}`} \n                            placeholder= \"name@email.com\" \n                            email = {this.props.email} \n                            value ={this.props.email}\n                            name = \"email\"/>\n                        <input type=\"password\" \n                            name = \"password\"\n                            onChange={this.onChange}\n                            className={`${input} ${inputDefault}`} \n                            placeholder= \"password\" \n                            password = {this.props.password} \n                            value = {this.props.password}/>\n                        <button type=\"submit\" className={`${submitButton} ${submitDefault}`}>{this.props.textContent}</button>\n                    </form>\n                 </>\n        )\n    }\n}\n\nexport default Form;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport { TiInputChecked } from \"react-icons/ti\";\nimport { css } from \"glamor\";\n\nclass Header extends React.PureComponent{\n\n    constructor(props){\n        super(props);\n\n        this.onClick = this.onClick.bind(this);\n    }\n\n    onClick(){\n        this.props.logout();\n    }\n\n    render(){\n\n        let pTextSpan = css ({\n            color: \"#196ab1\",\n            fontWeight: \"bold\",\n            textDecoration: \"none\",\n            \":hover\": {\n              color: \"#FF8B00\",\n            }\n          }) \n\n        let h3TextSpan = css ({\n            textDecoration: \"none\",\n            color: \"#196ab1\",\n            \":hover\": {\n                cursor: \"pointer\",\n            }\n        })\n\n\n        let icon = css({\n            width: \"20px\",\n            height: \"20px\",\n            backgroundColor: \"#196ab1\",\n            borderRadius: \" 0 50% 50% 50%\",\n            padding: \"5px\",\n            marginBottom: \"0px\",\n            marginRight: \"5px\",\n            position: \"relative\",\n            top: \"3px\"\n        })\n\n        console.log(\"render from header\")\n\n        let buttonOne;\n        let buttonTwo;\n        let homeButton;\n\n        if(this.props.testItem === \"todo\"){\n            homeButton = <h3><Link to=\"/\" className={h3TextSpan}> <TiInputChecked color=\"white\" className={icon}/>doToDo</Link></h3>;\n            buttonOne =  <p className=\"loginUser\">{this.props.user}</p>;\n            buttonTwo =  <button onClick={this.props.logout} className=\"logoutButton\">Log out</button>;\n        } else if (this.props.testItem === \"signup\"){\n            homeButton = <h3><Link to=\"/\" className={h3TextSpan}> <TiInputChecked color=\"white\" className={icon}/>doToDo</Link></h3>;\n            buttonOne = <p className=\"loginUser\"><Link to=\"/\" className={pTextSpan}>Home</Link></p>;\n            buttonTwo = <p className=\"logoutButton\"><Link to=\"/login\" className={pTextSpan}>Log in</Link></p>;\n        }  else if (this.props.testItem === \"login\"){\n            homeButton = <h3><Link to=\"/\" className={h3TextSpan}> <TiInputChecked color=\"white\" className={icon}/>doToDo</Link></h3>;\n            buttonOne = <p className=\"loginUser\"><Link to=\"/\" className={pTextSpan}>Home</Link></p>;\n            buttonTwo = <p className=\"logoutButton\"><Link to=\"/register\" className={pTextSpan}>Sign up</Link></p>;\n        } else if (this.props.testItem === \"home\"){\n            if (this.props.activeToken === \"Register\"){\n                homeButton = <h3><Link to=\"/\" className={h3TextSpan}> <TiInputChecked color=\"white\" className={icon}/>doToDo</Link></h3>;\n                buttonOne = <p className=\"loginUser\"><Link to=\"/register\" className={pTextSpan}>Sign up</Link></p>;\n                buttonTwo = <p className=\"logoutButton\"><Link to=\"/login\" className={pTextSpan}>Log in</Link></p>;\n            }else {\n                homeButton = <h3><Link to=\"/\" className={h3TextSpan}> <TiInputChecked color=\"white\" className={icon}/>doToDo</Link></h3>;\n                buttonOne = <p className=\"loginUser\">{this.props.activeToken}</p>;\n                buttonTwo =  <button onClick={this.props.logout} className=\"logoutButton\">Log out</button>;\n            }\n            \n        }\n\n        return (<div className=\"header\">\n                    <div className=\"header-left\">\n                        {homeButton}\n                    </div>\n                    <div className=\"header-right\">\n                        {buttonOne}\n                        <span>|</span>\n                        {buttonTwo}\n                    </div>\n                 </div>)\n                }\n}\n\nexport default Header;","import React from 'react';\n\nclass Footer extends React.PureComponent {\n    render(){\n        return (<footer>\n                    <p>Devina. A. Paramita Na - 2020 | \"Human Illustrator\" by <a href=\"https://www.humaaans.com/\">humaaans</a>, used under <a href=\"https://creativecommons.org/licenses/by/4.0/\">CC BY</a></p>\n                </footer>\n               )\n    }\n}\n\nexport default Footer;","import React from 'react';\nimport {Redirect, Link} from 'react-router-dom';\nimport axios from 'axios';\nimport {Helmet} from \"react-helmet\";\nimport {token$, updateToken} from './store';\nimport { TiUser } from \"react-icons/ti\"\nimport { css } from \"glamor\";\nimport Form from './Form';\nimport Header from './Header';\nimport Footer from './Footer';\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          email: '',\n          password: '',\n          error401: false,\n          error400: false,\n          token: token$.value,\n          value: \"\",\n          errorMsg: \"\",\n        };\n    \n        this.onSubmit = this.onSubmit.bind(this);\n        this.onChange = this.onChange.bind(this);\n      }\n    \n      componentDidMount() {\n        this.subscription = token$.subscribe(token => {\n          this.setState({token});\n        }); \n      }\n    \n      componentWillUnmount() {\n        this.subscription.unsubscribe();\n      }\n\n      onChange(value, name){\n        this.setState({\n          [name]:value,\n          value: value,\n        })\n      }\n\n      // submitting user data to server and in return getting a new login token to be save in localStorage\n    \n      onSubmit() {\n        //e.preventDefault();\n        let authData = {\n          email: this.state.email,\n          password: this.state.password,\n        };\n    \n        axios.post('http://3.120.96.16:3002/auth', authData)\n          .then(response => {\n            updateToken(response.data.token);\n          })\n          .catch(err => {\n            //this.setState({error: true});\n            console.log(err.response.data);\n            if (err.response.data.message === \"Validation error\"){\n              this.setState({error400: true, \n                             error401: false, \n                             errorMsg: err.response.data.details[0].message})\n             \n            } else if (err.response.data.message === \"Email or password incorrect\"){\n              console.log(\"error 401\")\n              this.setState({error401: true, \n                             error400: false,\n                             errorMsg: err.response.data.message})\n              \n            }\n          });\n      }\n\n    \n      render() {\n\n        if (this.state.token) {\n            return <Redirect to=\"/todo\" />;\n        } \n     \n        let icon = css({\n          width: \"60px\",\n          height: \"60px\",\n          backgroundColor: \"orange\",\n          borderRadius: \"50% 0% 50% 50%\",\n          padding: \"20px\",\n          marginBottom: \"0px\",\n      })\n\n        let textH3 = css ({\n          color: \"#196ab1\",\n          fontSize: \"35px\",\n          marginBottom: \"30px\",\n          width: \"320px\",\n          fontFamily: 'Montserrat, sans-serif',\n          lineHeight: \"20px\",\n          fontWeight: \"bold\",\n          marginTop: \"25px\",\n        })\n\n        let pText = css ({\n          fontSize: \"13px\",\n          color: \"#737373\",\n        })\n\n        let pTextSpan = css ({\n          color: \"orangered\",\n          fontWeight: \"bold\",\n          \":hover\": {\n            color: \"#FF8B00\",\n          }\n        })\n\n        let errMsg = css ({\n          color: \"red\",\n          margin: 0,\n          fontSize: \"12px\",\n          height: \"12px\",\n          fontWeight: \"700\",\n        })\n\n        let errorMsg = <p className = {errMsg}> </p>;\n        if (this.state.error400) {\n          errorMsg = <p className = {errMsg}>{this.state.errorMsg}</p>;\n        } else if (this.state.error401){\n          errorMsg = <p className = {errMsg}>{this.state.errorMsg}</p>\n        }\n\n\n        return (<div className =\"login-box\">\n                    <Helmet>\n                          <title>doTodo - Log in</title>\n                    </Helmet>\n                    <Header testItem = \"login\"/>\n                    <div className=\"login-container\">\n                        <div className=\"box-right\">\n                            <TiUser color=\"white\" className={icon}/>\n                            <h3 className={textH3}>Log in</h3> \n                            {errorMsg}\n                            <Form\n                                onSubmit = {this.onSubmit} \n                                error400 = {this.state.error400}\n                                error401 = {this.state.error401}\n                                email = {this.state.email} \n                                password = {this.state.password} \n                                textContent = \"Login\"\n                                onChange = {this.onChange}\n                                value = {this.state.value}\n                            />\n                            <p className={pText}>Don't have an account? <span><Link to=\"/register\" className={pTextSpan}>Sign up here!</Link></span></p>\n                        </div>\n                    </div>\n                    <Footer/>\n                </div>\n        )\n      }\n    }\n\nexport default Login;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport axios from 'axios';\nimport {Helmet} from \"react-helmet\";\nimport {Redirect} from 'react-router-dom';\nimport { TiUserAdd } from \"react-icons/ti\"\nimport { css } from \"glamor\";\nimport Form from './Form';\nimport Header from './Header';\nimport Footer from './Footer';\n\nclass Register extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {email: \"\",\n                      password: \"\",\n                      error400: false,\n                      errorMsg: \"\",\n                      value: \"\",\n                      status: false,\n                    };\n\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onChange = this.onChange.bind(this);\n    \n    }\n\n    onChange(value, name){\n      this.setState({\n        [name]:value,\n        value: value,\n      })\n    }\n\n    onSubmit(){\n\n        let newInput = {email : this.state.email, \n                        password: this.state.password};\n\n        axios.post(\"http://3.120.96.16:3002/register\", newInput)\n        .then(response => {\n            console.log(response);\n            this.setState({status: true})\n          })\n          .catch(err => {\n            console.log(err.response.data);\n            if (err.response.data.message === \"Validation error\"){\n              this.setState({error400: true,\n                             errorMsg: err.response.data.details[0].message })\n            } else if (err.response.data.message === \"User with that email address exists\") {\n              this.setState({error400: true,\n                             errorMsg: err.response.data.message })\n            }\n\n          });\n\n    }\n\n    render(){\n        if (this.state.status) {\n            return <Redirect to=\"/login\" />;\n          }\n\n          let icon = css({\n            width: \"60px\",\n            height: \"60px\",\n            backgroundColor: \"#196ab1\",\n            borderRadius: \"0 50% 50% 50%\",\n            padding: \"20px\",\n            marginBottom: \"0px\",\n        })\n\n          let textH3 = css ({\n            color: \"#196ab1\",\n            fontSize: \"35px\",\n            marginBottom: \"30px\",\n            width: \"320px\",\n            fontFamily: 'Montserrat, sans-serif',\n            fontWeight: \"bold\",\n            lineHeight: \"20px\",\n            marginTop: \"25px\",\n          })\n\n          let pText = css ({\n            fontSize: \"13px\",\n            color: \"#737373\",\n          })\n\n          let pTextSpan = css ({\n            color: \"orangered\",\n            fontWeight: \"bold\",\n            \":hover\": {\n              color: \"#FF8B00\",\n            }\n          })\n\n          let errMsg = css ({\n            color: \"red\",\n            margin: \"0\",\n            fontSize: \"12px\",\n            height: \"12px\",\n            fontWeight: \"bold\",\n          })\n\n  \n          let errorMsg = <p className = {errMsg}> </p>;\n          if (this.state.error400){\n            errorMsg = <p className = {errMsg}>{this.state.errorMsg}</p>\n          }\n\n          //console.log(this.state.valueUser)\n  \n\n        return (<div className =\"register-box\">\n                    <Helmet>\n                          <title>doTodo - Sign Up</title>\n                    </Helmet>\n                    <Header testItem = \"signup\"/>\n                    <div className=\"login-container\">\n                        <div className=\"box-right\">\n                            <TiUserAdd color=\"white\" className={icon}/> \n                            <h3 className={textH3}>Sign Up</h3>\n                            {errorMsg}\n                            <Form\n                                onSubmit = {this.onSubmit} \n                                error400 = {this.state.error400}\n                                error401 = {this.state.error401}\n                                email = {this.state.email} \n                                onChange = {this.onChange} \n                                value = {this.state.value} \n                                password = {this.state.password} \n                                textContent = \"Create Account\"\n                            />\n                            <p className={pText}>Already have an account? <span><Link to=\"/login\" className={pTextSpan}>Login here!</Link></span></p>\n                       </div>   \n                    </div>\n                    <Footer/>\n              </div>\n            )\n    }\n}\n\nexport default Register;","import React from 'react';\nimport axios from 'axios';\nimport {token$, updateToken} from './store';\nimport {Helmet} from \"react-helmet\";\nimport {Link} from 'react-router-dom';\nimport { css } from \"glamor\";\nimport { TiTick, TiThList, TiTimes } from \"react-icons/ti\";\nimport jwt from 'jsonwebtoken';\nimport Header from './Header';\nimport Footer from './Footer';\n//import headerimage from './header-image.jpg';\nimport background from './background.png';\nimport backgroundOnline from './background-online.png';\n\nlet url = 'http://3.120.96.16:3002/todos';\n\nclass Welcome extends React.Component {\n    constructor(props) {\n        super(props);\n    \n        this.state = {\n          user: \"\",\n          token: token$.value,\n          data: [],\n        };\n        this.logout = this.logout.bind(this);\n   \n      }\n\n      componentDidMount() {\n        console.log(\"does it mount\")\n\n        // subscribe to the token when just got log in\n        this.subscribe = token$.subscribe(token => {\n          this.setState({token});\n          if (this.state.token){\n            const decoded = jwt.decode(this.state.token);\n            this.setState({user: decoded.email})\n          }\n        });\n\n          if (this.state.token){\n            this.onGetData();\n        }\n      }\n      \n      onGetData(){\n\n        let CancelToken = axios.CancelToken;\n        this.source = CancelToken.source();\n      \n        axios.get(url, {\n            headers: {\n              Authorization: `Bearer ${this.state.token}`\n            },\n          },{\n            cancelToken: this.source.token,\n          })\n          .then(response => {   \n            console.log(response.data.todos);\n            this.setState({data: response.data.todos});     \n          })\n          .catch(e => {\n            console.error(e);\n            updateToken(null);\n          });\n      }\n\n   \n\n      // to clean up the component before login out\n      componentWillUnmount(){\n          this.subscribe.unsubscribe();\n\n          let CancelToken = axios.CancelToken;\n          this.source = CancelToken.source();\n\n          axios.get(url, {\n            cancelToken: this.source.token\n          })\n          .catch(function (thrown) {\n            if (axios.isCancel(thrown)) {\n              console.log('Request canceled', thrown.message);\n            } else {\n              // handle error\n            }\n          }); \n          this.source.cancel('Operation canceled by the user.'); \n      }\n\n      logout() {\n        updateToken(null);\n      }\n\n\n    render(){\n\n        let activeToken;\n        let ctaButton;\n        let grettings;\n        let dataLength;\n        let textInfo;\n        let pageTitle;\n\n        let link = css ({\n          color: \"rgb(252, 156, 11)\",\n          textDecoration: \"none\",\n          fontSize: \"20px\",\n          \":hover\": {\n            color: \"orangered\",\n          }\n      })\n\n        let iconRow = css ({\n          display: \"flex\",\n          flexFlow: \"row wrap\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        })\n\n        let iconRowSpan = css ({\n          width: \"140px\",\n          height: \"140px\",\n          display: \"flex\",\n          flexFlow: \"column wrap\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          fontSize: \"12px\",\n          padding: \"10px\",\n          background: \"#fba108\",\n          margin: \"-50px 15px 25px 15px\",\n          color: \"white\",\n          borderRadius: \"50%\",\n          textDecoration: \"none\",\n          fontWeight: \"bold\",\n          zIndex: 1,\n        })\n\n        let linkButton = css ({\n          width: \"180px\",\n          backgroundColor: \"rgb(252, 156, 11)\",\n          color: \"white\",\n          padding: \"10px\",\n          textDecoration: \"none\",\n          verticalAlign:\"middle\",\n          marginTop: \"30px\",\n          borderRadius: \"40px\",\n          \":hover\": {\n            backgroundColor: \"#ff7100\",\n          }\n        })\n\n        let image = css({\n          height: \"55%\",\n          objectFit: \"cover\",\n          marginBottom: \"50px\", \n          position: \"absolute\",\n          zIndex: \"0\",\n          marginTop: \"50px\",\n        })\n\n        let pText = css ({\n          fontSize: \"18px\",\n          fontWeight: \"bold\",\n        })\n\n        if(this.state.data !== undefined && this.state.data.length >= 1){\n          dataLength = this.state.data.length;\n          textInfo = \"Do not forget to check your list to make sure you did not miss anything!\";\n        } else if (this.state.data.length === 0){\n          dataLength = \"0\";\n          textInfo = \"Time to organize your day and create a list!\"\n        }\n\n        if (this.state.token) {\n            //return <Redirect to=\"/\" />;\n            activeToken = this.state.user;\n            pageTitle = <title>Welcome, {this.state.user}</title>\n            ctaButton = <Link to=\"/todo\" style= {{textDecoration: \"none\", color: \"white\", fontSize: \"15px\", fontWeight: \"bold\"}}><div className={linkButton}>Jump back to list!</div></Link>\n            grettings = (<>   \n                            <div className = \"welcome-top\">\n                                <img className={image} src={backgroundOnline} alt=\"headerimage\" />\n                            </div>\n                            <div className=\"welcome-content\">\n                                <div className=\"welcome-sidebar\">\n                                      <div className=\"counter\">\n                                         <h3>{dataLength}</h3>\n                                      </div>\n                                </div>\n                                <div className=\"welcome-textbox\">\n                                    <h3>Hi, {this.state.user}</h3>\n                                    <p className={pText}>Currently you have {dataLength} items on your to-do list.</p>\n                                    <p style = {{marginTop: \"0px\"}}>{textInfo}</p>\n                                    {ctaButton}\n                                </div>\n                          </div>\n                        </>)\n        } else {\n            activeToken = \"Register\";\n            pageTitle = <title>doTodo</title>\n            ctaButton = <h3><Link to=\"/register\" className={link}>Sign up now!</Link></h3>\n            grettings = (<>\n                          <div className = \"welcome-top\">\n                                <img className={image} src={background} alt=\"headerimage\" />\n                            </div>\n                          <div className={iconRow}>\n                              <div className={iconRowSpan}><TiThList size=\"80px\" color=\"white\"/>Make new list</div>\n                              <div to=\"/todo\" className={iconRowSpan}><TiTick size=\"80px\" color=\"white\"/>Done the list</div>\n                              <div to=\"/todo\" className={iconRowSpan}><TiTimes size=\"80px\" color=\"white\"/>Remove the list</div>\n                          </div>\n                          <p>doTodo is a general-purpose to-do creator website which can be used for simple home lists. You can simply create your own to do list, mark it when it's done and remove it when you no longer need it. It's that easy!</p>\n                          {ctaButton}\n                        </>)\n        }\n        \n        return (<div className=\"todoBox\">\n                  <Helmet>\n                      {pageTitle}\n                  </Helmet>\n                  <Header testItem = \"home\" \n                          activeToken = {activeToken}\n                          logout = {this.logout} />\n                  <div className=\"welcome-container\">\n                      {grettings}\n                  </div> \n                  <Footer/>\n             </div>)\n    \n  }\n}\n    \n\nexport default Welcome;","import React from 'react';\nimport { css } from \"glamor\";\n\nclass FormTodo extends React.Component {\n    constructor(props){\n        super(props);\n\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    onChange(e) {\n        this.props.onChange(e.target.value);\n    }\n\n    onSubmit(e){\n        e.preventDefault();\n        this.props.onSubmit();\n    }\n\n    render(){\n\n        let placeholder;\n        let errorMsg = \" \";\n        let counter;\n\n        let errMsg = css ({\n            color: \"red\",\n            margin: \"0px\",\n            fontSize: \"12px\",\n            fontWeight: \"bold\",\n            marginLeft: \"30px\",\n            width: \"calc(90% - 30px)\",\n            height: \"calc(100% - 10px)\",\n            marginBottom: \"5px\",\n          })\n  \n          counter = css ({\n            fontSize: \"12px\",\n            color: \"#737373\",\n            width: \"calc(10% - 10px)\",\n            //height: \"100%\",\n            textAlign: \"right\",\n            margin: \"0px 0px 0px 0px\",\n          })\n  \n          let errorCounter = css ({\n            display: \"flex\",\n            flexFlow: \"row wrap\",\n            height:\"20px\",\n            width: \"80%\",\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n            marginBottom: \"5px\",\n          })\n\n        if(this.props.inputError){\n          \n            errorMsg =  this.props.errorMsg;\n            placeholder = css({\n              border: \"2px solid red\",\n              padding: \"2px\",\n              \"::placeholder\": {\n                color: \"rgb(94, 94, 94)\",\n              }\n            })\n        } else {\n            errorMsg =  \" \";\n            placeholder = css({\n              border: \"1px solid #dddddd\",\n              padding: \"2px\",\n              \"::placeholder\": {\n                color: \"rgb(94, 94, 94)\",\n              }\n            })\n        }\n\n        if (this.props.input.length > 100 || this.props.input.length === 0){\n\n            counter = css ({\n              fontSize: \"12px\",\n              color: \"red\",\n              width: \"calc(10% - 10px)\",\n              textAlign: \"right\",\n              margin: \"0px 0px 0px 0px\",\n            })\n        }\n\n        return (<>\n                    <span className ={errorCounter} >\n                        <p className = {errMsg}>{errorMsg}</p>\n                        <p className= {counter}>{this.props.input.length}/100</p>\n                    </span>\n                    <form onSubmit = {this.onSubmit}>\n                        <input className={placeholder} \n                            type=\"text\" \n                            onChange= {this.onChange} \n                            value={this.props.value} \n                            placeholder= \"What to do today?\" \n                            />\n                        <button className=\"addButton\" type=\"submit\">Add List</button>\n                    </form>\n            </>\n        )\n    }\n}\n\nexport default FormTodo;","import React from 'react';\nimport { TiTickOutline, TiTick, TiDelete} from \"react-icons/ti\"\nimport { css } from \"glamor\";\n\nclass TheList extends React.Component {\n    constructor(props){\n        super(props);\n\n        this.onDelete = this.onDelete.bind(this);\n        this.radioBtnChange = this.radioBtnChange.bind(this);\n    }\n\n    onDelete(id){\n        this.props.onDelete(id);\n    }\n\n     // a function to control the checklist button correspon to every item on the list.\n     radioBtnChange(index){\n      this.props.radioBtnChange(index)\n    }\n\n    render(){\n        let printData;\n        let datas = [];\n\n        let icon = css({\n            color: \"rgba(180, 180, 180, 0.5)\", \n            position:\"relative\", \n            top: \"2px\",\n            right:\"40px\",\n            \":hover\":{\n              color: \"red\",\n            }\n        })\n\n        if (this.props.data){\n\n            //console.log(\"not undefined\");\n            datas.push(this.props.data)\n          \n            //mapping the data to be able to render \n            printData = datas[0].map((data) => {\n             \n              // controling which icon to use when the checklist is true or false\n              let button;\n              if (data.buttonState){\n                button = <TiTick size=\"25px\"  style={{color: \"rgb(250, 142, 0)\"}}/>\n              } else {\n                button = <TiTickOutline size=\"25px\"/>\n              }\n    \n              return (<li key= {data.id}>\n                          <span className=\"liText\" onClick={() => this.radioBtnChange(data.id)}>\n                              <span>{button}</span>\n                              <span>{data.content}</span>\n                          </span>\n                          \n                          <span className=\"deleteBtn\">\n                              <button className={icon} onClick = {() => this.onDelete(data.id)}><TiDelete size=\"25px\" /></button>\n                          </span>\n                      </li>\n                      )\n                     })\n        }\n        return (<ul>\n                    {printData}\n                 </ul>\n        )\n    }\n}\n\nexport default TheList;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nimport {token$, updateToken} from './store';\nimport {Helmet} from \"react-helmet\";\nimport {Redirect, Link} from 'react-router-dom';\nimport {TiHome, TiPower, TiWarning } from \"react-icons/ti\"\nimport { css } from \"glamor\";\nimport jwt from 'jsonwebtoken';\nimport Header from './Header';\nimport Footer from './Footer';\nimport FormTodo from './FormTodo';\nimport TheList from './TheList';\n\nlet url = 'http://3.120.96.16:3002/todos';\n\nclass Todo extends React.Component {\n    constructor(props) {\n        super(props);\n    \n        this.state = {\n          user: \"\",\n          token: token$.value,\n          input: \"\",\n          data: [],\n          inputError: false,\n          idStat: false,\n          errorMsg: \"\",\n          endSessionAlert: false,\n          endSessionMsg: \"\",\n        };\n\n        this.source = undefined;\n        this.logout = this.logout.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.onGetData = this.onGetData.bind(this);\n        this.onDelete = this.onDelete.bind(this);\n        this.radioBtnChange = this.radioBtnChange.bind(this);\n        this.endSessionOption = this.endSessionOption.bind(this);\n      }\n\n      componentDidMount() {\n        console.log(\"does it mount\")\n\n        // subscribe to the token when just got log in\n        this.subscribe = token$.subscribe(token => {\n          this.setState({token});\n          if (this.state.token){\n            const decoded = jwt.decode(this.state.token);\n            this.setState({user: decoded.email})\n          }\n        });\n\n        // if the token is valid, then grab the data from the server\n        if (this.state.token){\n            this.onGetData();\n        }\n        \n      }\n\n      onGetData(){\n\n        let CancelToken = axios.CancelToken;\n        this.source = CancelToken.source();\n      \n        axios.get(url, {\n            headers: {\n              Authorization: `Bearer ${this.state.token}`\n            },\n          },{\n            cancelToken: this.source.token,\n          })\n          .then(response => {   \n            console.log(response.data.todos);\n            this.setState({data: response.data.todos});    \n            \n          })\n          .then ( () => {\n            // adding a new key to the data, to be able to control the check button next to the list\n            console.log(this.state.data)\n            let datas = this.state.data;\n            datas.map(data => {\n              return data.buttonState = false;\n            })\n            // save the data with the new key\n            this.setState({data: datas})\n          })\n          .catch(e => {\n            \n            console.error(e);\n            this.setState({endSessionAlert: true})\n          });\n      }\n\n      // a function that called when log out, sending null parameter to the store.js that remove the token, hence making it not valid any longer\n      logout() {\n        updateToken(null);\n        this.setState({endSessionMsg: \"home\"})\n      }\n\n      // the function to track the user input on the to do list form\n\n      onChange(value){\n          let input = value;\n          this.setState({input});\n      }\n\n      onSubmit(){\n        //e.preventDefault();\n        console.log(this.state.input);\n        let input = this.state.input;\n        let userInput = { content: input };\n        \n        //sending new data to the server with a token to make sure it saved to the right user\n            axios.post(url, userInput,{\n              headers: {\n                Authorization: `Bearer ${this.state.token}`\n              }\n            })\n            .then( response => {\n              console.log(response)\n              // save the input locally to avoid the need to fetch new data from the server, hence making it lighter to load for user\n              let copyData = [...this.state.data];\n              let newData = {\n                content: response.data.todo.content,\n                id: response.data.todo.id,\n                buttonState: false,\n              } \n    \n              this.setState({ data: [...copyData, newData] , \n                            inputError: false, \n                            input: \"\"})\n            \n          })\n          .catch ( err => {\n            // when error occurs, fetching the error messages from the server\n            console.log(err.response.data);\n            \n             // if token is already expired, then unsubscribe to token and show the dialog menu\n            if (err.response.data.message === \"Unauthorized\") {\n                this.setState({endSessionAlert: true})\n            } else if (err.response.data.message === \"Validation error\"){ // if there is an error in input, then fetch the error message from the server\n                this.setState({inputError: true, \n                errorMsg: err.response.data.details[0].message})\n            }\n          })\n      }\n\n      //removing a spesific item inside the list by sending it's id to the server\n      onDelete(id){\n        axios.delete( 'http://3.120.96.16:3002/todos/'+ id, {\n          headers: {\n            Authorization: `Bearer ${this.state.token}`\n          }\n        })\n        .then( response => {\n          console.log(response)\n          //delete the data locally, to avoid calling the server \n          const listIndex = this.state.data.findIndex (x => x.id === id);\n          let copyData = [...this.state.data]\n          copyData.splice(listIndex, 1)\n          this.setState({data: copyData})\n       }).catch(err => {\n         console.log(err)\n         // if token is already expired, then unsubscribe to token and show the dialog menu\n         if (err.response.data.message === \"Unauthorized\") {\n           this.setState({endSessionAlert: true})\n         }\n       })\n      }\n\n      // a function to control the checklist button correspon to every item on the list.\n      radioBtnChange(index){\n          if (index){\n            const buttonIndex = this.state.data.findIndex (x => x.id === index);\n          // console.log(buttonIndex)\n            const data = [...this.state.data];\n          \n          //console.log(\"the curent data\", data)\n          \n          data[buttonIndex] = {\n              content: data[buttonIndex].content,\n              id : data[buttonIndex].id,\n              buttonState : data[buttonIndex].buttonState === false ? true : false,\n          }\n\n          this.setState({data})\n        }\n\n      }\n  \n      componentDidUpdate(){\n        if (!this.state.token){\n          //updateToken(null);\n          this.setState({endSessionAlert: true})\n         }\n      }\n\n      // to clean up the component before login out\n      componentWillUnmount(){\n          this.subscribe.unsubscribe();\n\n          let CancelToken = axios.CancelToken;\n          this.source = CancelToken.source();\n\n          axios.get(url, {\n            cancelToken: this.source.token\n          })\n          .catch(function (thrown) {\n            if (axios.isCancel(thrown)) {\n              console.log('Request canceled', thrown.message);\n            } \n          }); \n          this.source.cancel('Operation canceled by the user.'); \n\n      }\n\n      // the function to set the link to redirect\n      endSessionOption(option){\n        updateToken(null);\n        if (option === \"backhome\"){\n          this.setState({endSessionMsg: \"home\"})\n        } else if (option === \"relogin\"){\n          this.setState({endSessionMsg: \"login\"})\n        }\n      }\n\n\n    render(){\n\n        if(this.state.endSessionMsg === \"login\"){\n          return <Redirect to=\"/login\" />;\n        } else if (this.state.endSessionMsg === \"home\"){\n          return <Redirect to=\"/\" />;\n        }\n\n        let endSessionBox;\n\n        let backButton = css ({\n          width: \"100%\",\n          height: \"40px\",\n          borderBottom: \"1px solid #e0e0e0\",\n          borderLeft: \"none\",\n          borderTop: \"none\",\n          borderRight: \"none\",\n          paddingBottom: \"8px\",\n          backgroundColor: \"#fff\",\n          textAlign: \"left\",\n          fontFamily: \"'Montserrat', sans-serif\",\n          fontSize: \"13px\",\n          color: \"#737373\",\n          marginTop: \"8px\",\n          verticalAlign: \"middle\",\n          \":hover\": {\n            cursor: \"pointer\",\n            backgroundColor: \"#f5f5f5\",\n            color: \"orangered\",\n            fontWeight: \"bold\",\n          }\n        })\n\n        if (this.state.endSessionAlert){\n          console.log(\"alert true\")\n            endSessionBox = (<div className=\"container endSession\">\n                                  <div className=\"container endSession box\">\n                                      <TiWarning size=\"40px\" />\n                                      <p>Your session has expired.</p>\n                                      <p>Please log in again to continue or log out to return to home.</p>\n                                      <div>\n                                          <button onClick={() => {this.endSessionOption(\"relogin\") }} >Go to login</button>\n                                          <button onClick={() => {this.endSessionOption(\"backhome\") }} >Log out</button>\n                                      </div>\n                                  </div>\n                             </div>)\n        }\n\n\n        return <div className=\"todoBox\">\n                  <Helmet>\n                      <title>The To Do List</title>\n                  </Helmet>\n                  <Header user = {this.state.user}\n                          logout = {this.logout}\n                          testItem = \"todo\"\n                  />\n                  <div className=\"container\">\n                      <div className=\"info-box\">\n                          <div className=\"info-area\">\n                              <h2>Welcome, {this.state.user}</h2>\n                              <hr/>\n                              <p>doTodo is a general-purpose website which can be used for simple home lists. You can simply create your own to do list, mark it when it's done and remove it when you no longer need it. It's that easy!</p>\n                          </div>\n                          <div className=\"info-menu\">\n                              <h3>Main Menu</h3>\n                              <hr/>\n                              <Link to =\"/\" ><button className={backButton}><TiHome size=\"16px\" color= \"orangered\" style={{position: \"relative\", top: \"2px\", marginRight: \"6px\", marginLeft:\"5px\"}}/>Home</button></Link>\n                              <button className={backButton} onClick={this.logout}><TiPower size=\"22px\" color= \"orangered\" style={{position: \"relative\", top: \"6px\", marginRight: \"3px\", marginLeft:\"3px\"}}/>Log out</button>\n                          </div>\n                      </div>\n                      <div className=\"content\">\n                          <div className=\"content-top\">\n                            <h2>YOUR TO DO LIST</h2>\n                            <FormTodo \n                                onChange= {this.onChange} \n                                value={this.state.input} \n                                errorMsg = {this.state.errorMsg}\n                                input = {this.state.input}\n                                inputError = {this.state.inputError}\n                                onSubmit = {this.onSubmit}\n                            />\n                          </div>\n                          <div className=\"todolist\">\n                                <TheList \n                                  data = {this.state.data}\n                                  onDelete = {this.onDelete}\n                                  radioBtnChange = {this.radioBtnChange}\n                                />\n                          </div>\n                      </div>\n                    \n                  </div>\n                  <Footer />\n                  {ReactDOM.createPortal(endSessionBox, document.body)}\n             </div>\n    \n  }\n}\n    \n\nexport default Todo;","import React from 'react';\nimport { Route, BrowserRouter as Router } from 'react-router-dom';\nimport Login from './Login';\nimport Register from './Register';\nimport Home from './Welcome';\nimport Todo from './Todo';\nimport './App.css';\n\nclass App extends React.Component {\n    render(){\n      return (\n        <div className=\"App\">\n            <Router basename =\"/todo-app>\">\n              <Route exact path=\"/\" component={Home} />\n              <Route path=\"/register\" component={Register} />\n              <Route path=\"/login\" component={Login} />\n              <Route path=\"/todo\" component={Todo} />\n            </Router>\n        </div>\n      );\n    }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}